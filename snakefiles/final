##############################################################################
## FINAL THESIS ASSEMBLY SNAKEFILES                                         ##
##############################################################################

# TEX input files
tex_cls = "thesis2"
tex_inputs = ["A1_preamble", "A2_thesis-info", "A3_abbreviations", "B1_dedication",
            "B2_abstract-de", "B3_abstract-en", "B4_acknowledgements",
            "C1_Introduction", "C2_Methods",
            "C3_Locus", "C4_IgSeq", "C5_Conclusion",
            "D1_Solutions", "D2_Primers", "D3_Diversity",
            "D4_Figures", "D5_Tables", "E1_Declaration",
            "E2_Lebenslauf"]

# Figures
intro_figures = ["intro-antibody-structure", "intro-primary-diversity",
            "intro-teleost-loci", "intro-bcell-repertoire-primary-secondary",
            "intro-turquoise-killifish"]

#-----------------------------------------------------------------------------
# Generate files
#-----------------------------------------------------------------------------

rule convert_svg_pdf:
    """Convert SVG figures to PDF for display."""
    input:
        svg = "output_files/figures/svg/{name}.svg",
        bin = "bin/rsvg-convert",
    output: "output_files/figures/pdf/{name}.pdf"
    shell:
        "{input.bin} -f pdf -o {output} {input.svg}"

rule convert_svg_pdf_raw:
    """Convert handmade SVG figures to PDF for display."""
    input:
        svg = "input_files/figures_raw/{name}.svg",
        bin = "bin/rsvg-convert",
    output: "output_files/figures/pdf/{name}.pdf"
    shell:
        "{input.bin} -f pdf -o {output} {input.svg}"

rule compile_thesis:
    """Assemble all input files and compile thesis."""
    input:
        expand("input_files/tex/{name}.tex", name=tex_inputs),
        expand("input_files/cls/{name}.cls", name=tex_cls),
        "input_files/References.bib",
        expand("output_files/figures/pdf/{name}.pdf", name=intro_figures),
        expand("output_files/figures/pdf/{name}.pdf", name=locus_figures),
        expand("output_files/figures/pdf/{name}.pdf", name=locus_figures_si),
        expand("output_files/tables/{name}.tex", name=locus_tables),
        expand("output_files/tables/{name}.tex", name=locus_tables_si),
        expand("output_files/figures/pdf/{name}.pdf", name=igseq_figures),
        expand("output_files/figures/pdf/{name}.pdf", name=igseq_figures_si),
        expand("output_files/tables/{name}.tex", name=igseq_tables),
        expand("output_files/tables/{name}.tex", name=igseq_tables_si),
        expand("output_files/txt/{name}.txt", name=igseq_text_embeds),
        thesis = "input_files/tex/thesis.tex",
        pdflatex = "bin/pdflatex", biber = "bin/biber",
        makeglossaries = "bin/makeglossaries",
    output:
        "thesis.pdf",
        temp("thesis.aux"), temp("thesis.bbl"), temp("thesis.blg"),
        temp("thesis.glo"), temp("thesis.ist"), temp("thesis.log"),
        temp("thesis.lof"),
        temp("thesis.lot"), temp("thesis.out"), temp("thesis.toc"),
        temp("thesis.tex"), temp("thesis.bcf"), temp("thesis.glg"),
        temp("thesis.gls"),
        temp("thesis.run.xml"),
    log: "log_files/compile_thesis.dbg"
    shell:
        "cp {input.thesis} thesis.tex;"
        "echo 'Compiling thesis...\n' > {log}; "
        "{input.pdflatex} -interaction=nonstopmode -halt-on-error thesis.tex &>> {log}; "
        "echo '\n...done.\n' >> {log}; "
        "echo '\nCompiling bibliography...\n' >> {log}; "
        "{input.biber} thesis &>> {log}; "
        "echo '\n...done.\n' >> {log}; "
        "echo '\nCompiling glossaries...\n' >> {log}; "
        "{input.makeglossaries} thesis &>> {log}; "
        "echo '\n...done.\n' >> {log}; "
        "echo '\nRecompiling thesis...\n' >> {log}; "
        "{input.pdflatex} -interaction=nonstopmode -halt-on-error thesis.tex &>> {log}; "
        "echo '\n...done.\n' >> {log}; "
        "echo '\nRecompiling glossaries...\n' >> {log}; "
        "{input.makeglossaries} thesis &>> {log}; "
        "echo '\n...done.\n' >> {log}; "
        "echo '\nRecompiling thesis...\n' >> {log}; "
        "{input.pdflatex} -interaction=nonstopmode -halt-on-error thesis.tex &>> {log}; "
        "echo '\n...done.' >> {log}; "
